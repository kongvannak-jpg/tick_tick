name: Flutter CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Code Quality and Testing
  analyze-and-test:
    runs-on: ubuntu-latest
    name: Analyze & Test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed .

    - name: Analyze project source
      run: flutter analyze --fatal-infos

    - name: Run tests
      run: flutter test

  # Build for multiple platforms
  build-android:
    needs: analyze-and-test
    runs-on: ubuntu-latest
    name: Build Android

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Build APK
      run: flutter build apk --release

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release.apk
        path: build/app/outputs/flutter-apk/app-release.apk

  build-web:
    needs: analyze-and-test
    runs-on: ubuntu-latest
    name: Build Web

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'
        cache: true

    - name: Get dependencies
      run: flutter pub get

    - name: Build Web
      run: flutter build web --release

    - name: Upload web build
      uses: actions/upload-artifact@v3
      with:
        name: web-build
        path: build/web/

  # Security scanning
  security:
    runs-on: ubuntu-latest
    name: Security Scan
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Deployment (only on main branch)
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [analyze-and-test, build-web]
    runs-on: ubuntu-latest
    name: Deploy

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download web build
      uses: actions/download-artifact@v3
      with:
        name: web-build
        path: build/web

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/web

  # Notification
  notify:
    if: always()
    needs: [analyze-and-test, build-android, build-web]
    runs-on: ubuntu-latest
    name: Notify

    steps:
    - name: Notify on success
      if: ${{ needs.analyze-and-test.result == 'success' && needs.build-android.result == 'success' && needs.build-web.result == 'success' }}
      run: |
        echo "✅ Build successful! All checks passed."

    - name: Notify on failure
      if: ${{ needs.analyze-and-test.result == 'failure' || needs.build-android.result == 'failure' || needs.build-web.result == 'failure' }}
      run: |
        echo "❌ Build failed! Please check the logs."